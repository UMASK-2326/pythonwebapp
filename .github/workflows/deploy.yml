name: Build and Deploy Python App to EC2 with Docker and ECR

on:
  push:
    branches: [main]

env:
  AWS_REGION: "ap-south-1"
  AWS_EC2: "docker-ec2-instance"
  ECR_REPO: "myrepo"
  GIT_SHA: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }} .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    outputs:
      ec2_ip: ${{ steps.getip.outputs.ip }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get EC2 Public IP
        id: getip
        run: |
          IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=${{ env.AWS_EC2 }}" \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text)
          echo "ip=$IP" >> $GITHUB_OUTPUT

      - name: SSH and Deploy Docker Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.getip.outputs.ip }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker rm -f $(docker ps -aq) || true
            docker rmi -f $(docker images -q) || true

            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

            docker run -td -p 80:5000 --name flask-app ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }}
